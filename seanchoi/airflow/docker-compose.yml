
services:
    postgres:
        image: postgres:13
        container_name: postgres_container
        environment:
          POSTGRES_USER: airflow
          POSTGRES_PASSWORD: airflow
          POSTGRES_DB: airflow
        volumes:
          - postgres-db-volume:/var/lib/postgresql/data
          - ./init_db_postgres.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
        healthcheck:
          test: ["CMD", "pg_isready", "-U", "airflow"]
          interval: 5s
          retries: 5
        restart: always
        
    redis:
        image: redis:latest
        expose:
          - 6379
        healthcheck:
          test: ["CMD", "redis-cli", "ping"]
          interval: 5s
          timeout: 30s
          retries: 50
        restart: always    

    airflow:       
        privileged: true
        user: "root"                           
        build: './airflow_docker'                       
        container_name: airflow_container
        restart: always
        depends_on:
            - postgres
        environment:
            AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_container:5432/airflow
            AIRFLOW__CORE__EXECUTOR: LocalExecutor
            AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'True'
            AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
            AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
            AIRFLOW__CORE__FERNET_KEY: 'ffHBWrWkkmkrpqEu_9fz8-sF0SdI-OAvUQ1OeQNoomE='
            dags_folder: /opt/airflow/dags
            WEB_SERVER_PORT: 3000
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
            NLTK_DATA: /opt/airflow/nltk_data
            PYTHONPATH: /home/airflow/.local/lib/python3.7/site-packages:$PYTHONPATH:/opt/airflow/plugins
            PATH: /home/airflow/.local/bin:$PATH
        volumes:                                        
            - ./dags:/opt/airflow/dags:rw
            - ./data:/opt/airflow/data:rw
            - ./plugins:/opt/airflow/plugins:rw
            - ./nltk_data:/opt/airflow/nltk_data


        ports:
            - "8080:8080"   
            - "3000:3000" 
            - "4040:4040" 
            - "9083:9083"
            - "10000:10000"       
            - "9864:9864"   
            - "8000:8000"                 
        command: webserver
        healthcheck:
          test: ["CMD", "curl", "--fail", "http://localhost:3000/health"]
          interval: 10s
          timeout: 10s
          retries: 5

    zookeeper:                                          
        image: wurstmeister/zookeeper
        container_name: zookeeper_container
        restart: always
        ports:
            - "2181:2181"                               

    kafka:                                              
        image: wurstmeister/kafka
        container_name: kafka_container
        restart: always
        ports:
            - "9092:9092"                               
        environment:
            KAFKA_ADVERTISED_HOST_NAME: kafka                               
            KAFKA_CREATE_TOPICS: "transactions:1:1,locations:1:1"           
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181                         
            KAFKA_LISTENERS: PLAINTEXT://kafka:9092                         
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092              
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres-db-volume:
